
server:
  port: 8080
  servlet:
    encoding:
      charset: UTF-8
      enabled: true
      force: true

spring:
  application:
    name: ai-chat
    
  # 数据源配置
  datasource:
    # PostgreSQL数据库配置
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/ai_chat
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD:xupeng2016}
  
  # JPA配置
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    
  # SQL初始化配置
  sql:
    init:
      mode: always
      encoding: UTF-8
  
  # AI配置
  ai:
    openai:
      api-key: ${OPENAI_API_KEY:ms-d2ce925e-2397-4c4c-9de2-62e820357af6}
      base-url: ${OPENAI_BASE_URL:https://api-inference.modelscope.cn/v1}
      model: ${OPENAI_MODEL:Qwen/Qwen3-235B-A22B-Thinking-2507}
      temperature: 0.7
      max-tokens: 1000
  
  # 异步任务配置
  task:
    execution:
      pool:
        core-size: 5
        max-size: 20
        queue-capacity: 100
        thread-name-prefix: "ai-chat-"

# MyBatis配置
mybatis:
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.example.entity
  configuration:
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    cache-enabled: true
    lazy-loading-enabled: true

# 日志配置
logging:
  level:
    com.example: DEBUG
    org.springframework.ai: DEBUG
    org.mybatis: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# 搜索服务配置
search:
  tavily:
    api-key: ${TAVILY_API_KEY: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}
    base-url: ${TAVILY_BASE_URL:https://api.tavily.com/search}
  enabled: ${SEARCH_ENABLED:true}

# 应用配置
app:
  chat:
    max-history-size: 20
    response-timeout: 300s
    sse-timeout: 300s